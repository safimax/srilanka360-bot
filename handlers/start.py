from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command, CommandObject
from aiogram.fsm.context import FSMContext
from states.bot_states import BotStates
from utils.text_utils import get_text, get_keyboard

router = Router()

@router.message(Command("start"))
async def handle_start(message: Message, command: CommandObject, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å—Ü–µ–Ω–∞—Ä–∏—è –≤—Ö–æ–¥–∞"""
    start_param = command.args
    user_id = message.from_user.id
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—Ö–æ–¥–∞
    if start_param and "VILLA_" in start_param:
        # UTM —Å –≤–∏–ª–ª–æ–π
        villa_id = extract_villa_id(start_param)
        await state.update_data(
            entry_point=start_param,
            villa_id=villa_id
        )
        await show_welcome_utm(message, state, villa_id)
        
    elif start_param == "channel_general":
        # –ò–∑ —à–∞–ø–∫–∏ –∫–∞–Ω–∞–ª–∞
        await state.update_data(entry_point="channel_general")
        await show_welcome_channel(message, state)
        
    else:
        # –í–Ω–µ—à–Ω–∏–π / –ø—Ä—è–º–æ–π –≤—Ö–æ–¥
        entry_point = start_param or "direct"
        await state.update_data(entry_point=entry_point)
        await show_welcome_external(message, state)

def extract_villa_id(start_param: str) -> str:
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ villa_id –∏–∑ UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"""
    if "VILLA_" in start_param:
        return start_param.split("_UTM")[0]
    return None

async def show_welcome_utm(message: Message, state: FSMContext, villa_id: str):
    """UTM –≤—Ö–æ–¥ - –ø–æ–∫–∞–∑–∞—Ç—å –ü—Ä–∏–≤–µ—Ç –º–∏—Ä + –≤–∏–ª–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞"""
    text = get_text("screens.welcome_utm.message")
    keyboard = get_keyboard(["üöÄ –ì–æ—Ç–æ–≤ –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –æ—Ç–¥—ã—Ö—É"])
    
    await message.answer(text, reply_markup=keyboard)
    await state.set_state(BotStates.WELCOME_UTM)

async def show_welcome_channel(message: Message, state: FSMContext):
    """–ö–∞–Ω–∞–ª –≤—Ö–æ–¥ - —Å—Ä–∞–∑—É –∫ 5 –≤–æ–ø—Ä–æ—Å–∞–º"""
    text = get_text("screens.welcome_channel.message") 
    keyboard = get_keyboard(["üíé –ü–æ–¥–æ–±—Ä–∞—Ç—å –≤–∏–ª–ª—É –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º"])
    
    await message.answer(text, reply_markup=keyboard)
    await state.set_state(BotStates.WELCOME_CHANNEL)

async def show_welcome_external(message: Message, state: FSMContext):
    """–í–Ω–µ—à–Ω–∏–π –≤—Ö–æ–¥ - –ü—Ä–∏–≤–µ—Ç –º–∏—Ä + –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º"""
    text = get_text("screens.welcome_external.message")
    keyboard = get_keyboard(["üöÄ –ì–æ—Ç–æ–≤ –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –æ—Ç–¥—ã—Ö—É"])
    
    await message.answer(text, reply_markup=keyboard)
    await state.set_state(BotStates.WELCOME_EXTERNAL)