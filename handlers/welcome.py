from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from states.bot_states import BotStates
from utils.text_utils import get_text, get_keyboard

router = Router()

@router.callback_query(F.data == "–≥–æ—Ç–æ–≤_–∫_—ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É_–æ—Ç–¥—ã—Ö—É")
async def handle_ready_exclusive(callback: CallbackQuery, state: FSMContext):
    """UTM/–≤–Ω–µ—à–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º"""
    current_state = await state.get_state()
    data = await state.get_data()
    
    if current_state == BotStates.WELCOME_UTM and data.get("villa_id"):
        villa_id = data["villa_id"]
        text = get_text("screens.villa_utm_detected.message").format(villa_id=villa_id)
        keyboard = get_keyboard(["üè† –ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–∞—Ç–∞–º –∏ –¥–µ—Ç–∞–ª—è–º"])
        
        await callback.message.edit_text(text, reply_markup=keyboard)
        await state.set_state(BotStates.VILLA_UTM_DETECTED)
    else:
        await show_questions_start(callback, state)
    
    await callback.answer()

@router.callback_query(F.data == "–ø–æ–¥–æ–±—Ä–∞—Ç—å_–≤–∏–ª–ª—É_–ø–æ_–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º")
async def handle_select_villa(callback: CallbackQuery, state: FSMContext):
    """–ö–∞–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: —Å—Ä–∞–∑—É –∫ —Ä–∞–∑–≤–∏–ª–∫–µ"""
    from handlers.villa import show_villa_fork
    await show_villa_fork(callback.message, state)
    await callback.answer()

@router.callback_query(F.data == "–ø–µ—Ä–µ–π—Ç–∏_–∫_–¥–∞—Ç–∞–º_–∏_–¥–µ—Ç–∞–ª—è–º")
async def handle_villa_utm_confirmed(callback: CallbackQuery, state: FSMContext):
    """UTM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∏–Ω—Ç–µ—Ä–µ—Å –∫ –≤–∏–ª–ª–µ"""
    from handlers.group import show_group_type
    await show_group_type(callback.message, state)
    await callback.answer()

async def show_questions_start(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    text = get_text("screens.questions_start.message")
    keyboard = get_keyboard(["üíé –ü–æ–¥–æ–±—Ä–∞—Ç—å –≤–∏–ª–ª—É –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º"])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(BotStates.QUESTIONS_START)